blueprint:
  name: "Philips Hue Dimmer Switch: Dimmable Bulb v1"
  description: "Control a single dimmable bulb."
  domain: automation
  source_url: https://github.com/mkarimv/ha-philips-dimmer-switch/blob/master/dimmable-bulb.yaml
  input:
    remote:
      name: Philips Hue Dimmer Switch
      description: Pick either RWL020 (US) or RWL021 (EU)
      selector:
        device:
          integration: zha
          manufacturer: Philips
          entity:
            domain: sensor
            device_class: battery
          multiple: false
    lights:
      name: lights
      description: The light(s) to control
      selector:
        target:
          entity:
            - domain:
                - all
mode: restart
max_exceeded: silent
trigger:
  - platform: event
    event_type: zha_event
    event_data:
      device_id: !input remote
action:
  # https://www.home-assistant.io/docs/scripts/#variables
  # https://www.home-assistant.io/docs/blueprint/schema/#blueprint-inputs-in-templates
  - variables:
      command: "{{ trigger.event.data.command }}"
      # bulb.device_id
      bulb: !input lights
  - choose:
      # turn bulb on
      - conditions:
          - "{{ command == 'on_press' }}"
        sequence:
          - action: light.turn_on
            target: !input lights
            data:
              brightness_pct: 100
              transition: 1

      # turn bulb on to minimum brightness
      - conditions:
          - "{{ command == 'on_hold' }}"
        sequence:
          - service: light.turn_on
            target: !input lights
            data:
              brightness_pct: 1
              transition: 1

      # bulb brightness up
      - conditions:
          - "{{ command == 'up_hold' }}"
        sequence:
          - service: light.turn_on
            target: !input lights
            data:
              brightness_step_pct: 20
              transition: 1
      - conditions:
          - "{{ command == 'up_short_release' }}"
        sequence:
          - service: light.turn_on
            target: !input lights
            data:
              brightness_step_pct: 5
              transition: 0

      # bulb brightness down
      - conditions:
          - "{{ command == 'down_hold' }}"
        sequence:
          - service: light.turn_on
            target: !input lights
            data:
              brightness_step_pct: -20
              transition: 1
      - conditions:
          - "{{ command == 'down_short_release' }}"
        sequence:
          - service: light.turn_on
            target: !input lights
            data:
              brightness_step_pct: -5
              transition: 0

      # turn bulb off
      - conditions:
          - "{{ command == 'off_press' }}"
        sequence:
          - service: homeassistant.turn_off
            target: !input lights
            data:
              transition: 0
